#summary WebApp 优化 checklist

== 简介 ==

　　为了检查并发下载冲突，建议针对首页和每个具体的二级页面，使用优化大师设置并发连接数为2个和8个两种情况下分布进行HttpWatch抓包测试。建议进行NetLimiter限速测试。


== 自检项目: ==

* 资源检查（针对html，js，swf，css，图片等）

是否新增加了文件请求？

是否有404请求？

新增加的文件请求响应中是否有expirex头（好头）？

新增加的文件请求响应中是否有etag头（坏头）？

新增加的文件请求是否支持gzip压缩？

新增加的文件请求下载过程是否有block?

新增加的文件请求下载过程是否导致其他资源block?

新增加的文件请求能否延迟加载？

是否减少了文件请求或者合并了文件请求？

新增加的请求能否被浏览器缓存？

新增加的请求是否适合进行长时间缓存？

在empty cache和full cache两种情况下，是否有重复的文件请求？

在empty cache和full cache两种情况下，是否有abort的文件请求？

新增加的文件请求是否需要通过一个301/302跳转

（针对imgcache）新增加的文件是否适合分散到新域名下？

* Js检查

新增加的js请求能否合并到现有的js请求或者页面请求中？

新增加的js请求是否在关键路径上?

新增加的js请求能否放到body之后加载？能否延迟异步加载？

新增加的js文件是否重写了大量已有js文件的代码？

Js文件能否进行混淆和压缩？

循环中的计算有没有能提出到循环外进行的？

有没有大量连续的字符串连接操作（如有考虑用数组join）

* CSS检查

新增加的CSS是否有相互import？

新增加的CSS是否大量复写了原有CSS文件的大量规则？

新增加的多个CSS能否合并？

CSS能否直接写到html页面中(可复用性高吗?)？

是否使用了expression？

是否在hover样式中重新声明了背景图片（会导致重复请求）？

* 限速检查

是否进行过netlimiter限速测试？

在限制IE下载进程为2个和8个两种情况下打开页面的速度是否有明显差异？

是否进行过cpukiller限速测试？

* http检查

DNS Lookup次数：

Block 请求个数（请求的）：

关键路径上Block请求个数

*Cookie检查

是否创建了新的cookie?

是否创建了新的文件cookie?

是否创建了新的qq.com域名cookie?

能否用user-data或者share object代替cookie？

* 图片检查

新增加的图片能否延迟到用户要看的时候再加载？

新增加的图片是否用innerHTML方式填充到页面中的（可能导致重复请求）？

新增加的图片是否需要进行预加载？

新增加的图片能否合并到已有的图片中？

* Html检查

是否使用了iframe？

Css是否写在head中？

Script是否（能否）写到页面最下面？

Html文件能否进行混淆和压缩？

Inline的css是否使用了了expression,是否在hover样式中重新声明了背景图片？

* flash检查

Flash是否使用了比较耗费cpu的渲染效果?

Flash是否超过了100k？

Flash是否需要下载额外的网络资源?

Flash能否延迟加载?

* Ajax检查

页面能否分阶段渲染？

页面能否边显示（或者交互）边渲染

写操作是否用post方式提交

读操作能否用json方式请求？

CGI能否允许cache，能否支持304响应，能否支持Gzip压缩